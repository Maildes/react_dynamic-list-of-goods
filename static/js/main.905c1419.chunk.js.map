{"version":3,"sources":["api.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","a","fetch","response","json","GoodsList","goods","map","id","name","color","key","style","App","useState","setGoods","isLoading","handleLoading","type","onClick","then","goodsFromServer","filter","good","sort","b","localeCompare","slice","ReactDOM","render","document","getElementById"],"mappings":"8PAQaA,EAAQ,uCAAG,4BAAAC,EAAA,sEACCC,MATT,yEAQQ,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDCDRC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,wBAAIC,IAAKH,EAAII,MAAO,CAAEF,UACnBD,QCiDMI,EAvDH,WAAO,IAAD,EACUC,mBAAkB,IAD5B,mBACTR,EADS,KACFS,EADE,OAEmBD,oBAAkB,GAFrC,mBAETE,EAFS,KAEEC,EAFF,KAwChB,OACE,oCACE,qDAEA,4BAAQC,KAAK,SAASC,QAxCL,WACnBF,GAAc,GAEdjB,IACGoB,KAAKL,GAERE,GAAc,KAkCZ,YACA,4BAAQC,KAAK,SAASC,QAhCL,WACnBF,GAAc,GAEdjB,IACGoB,MAAK,SAAAC,GAAe,OAAIA,EAAgBC,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKb,YAC5DU,KAAKL,GAERE,GAAc,KAyBZ,YACA,4BAAQC,KAAK,SAASC,QAvBH,WAMrBF,GAAc,GAEdjB,IACGoB,MARgB,SAACC,GAClB,OAAO,YAAIA,GACRG,MAAK,SAACvB,EAAGwB,GAAJ,OAAUxB,EAAEQ,KAAKiB,cAAcD,EAAEhB,YAOxCW,MAAK,SAAAC,GAAe,OAAIA,EAAgBM,MAAM,EAAG,MACjDP,KAAKL,GAERE,GAAc,KAUZ,gBAECD,EACG,yCACC,kBAAC,EAAD,CAAWV,MAAOA,MCnD7BsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.905c1419.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport interface Goods {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport const getGoods = async (): Promise<Goods[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n","import React from 'react';\nimport { Goods } from './api';\n\ntype Props = {\n  goods: Goods[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li key={id} style={{ color }}>\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getGoods, Goods } from './api';\nimport { GoodsList } from './GoodsList';\n\nconst App = () => {\n  const [goods, setGoods] = useState<Goods[]>([]);\n  const [isLoading, handleLoading] = useState<boolean>(false);\n\n  const loadAllGoods = () => {\n    handleLoading(true);\n\n    getGoods()\n      .then(setGoods);\n\n    handleLoading(false);\n  };\n\n  const loadRedGoods = () => {\n    handleLoading(true);\n\n    getGoods()\n      .then(goodsFromServer => goodsFromServer.filter(good => good.color === 'red'))\n      .then(setGoods);\n\n    handleLoading(false);\n  };\n\n  const firstFiveGoods = () => {\n    const sortByName = (goodsFromServer: Goods[]) => {\n      return [...goodsFromServer]\n        .sort((a, b) => a.name.localeCompare(b.name));\n    };\n\n    handleLoading(true);\n\n    getGoods()\n      .then(sortByName)\n      .then(goodsFromServer => goodsFromServer.slice(0, 5))\n      .then(setGoods);\n\n    handleLoading(false);\n  };\n\n\n  return (\n    <>\n      <h1>Dynamic list of Goods</h1>\n\n      <button type=\"button\" onClick={loadAllGoods}>Load all</button>\n      <button type=\"button\" onClick={loadRedGoods}>Load red</button>\n      <button type=\"button\" onClick={firstFiveGoods}>Load 5 first</button>\n\n      {isLoading\n        ? <p>Loading...</p>\n        : (<GoodsList goods={goods} />)}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}